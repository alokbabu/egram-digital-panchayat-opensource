// <auto-generated />
using System;
using EGram.Data.SQL.Ef.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EGram.Data.SQL.Ef.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EGram.Data.SQL.Ef.Models.BloodGroup", b =>
                {
                    b.Property<int>("BloodGroupId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Group");

                    b.HasKey("BloodGroupId");

                    b.ToTable("BloodGroups");

                    b.HasData(
                        new { BloodGroupId = 1, Group = "A +" },
                        new { BloodGroupId = 2, Group = "A -" },
                        new { BloodGroupId = 3, Group = "B +" },
                        new { BloodGroupId = 4, Group = "B -" },
                        new { BloodGroupId = 5, Group = "O +" },
                        new { BloodGroupId = 6, Group = "O -" },
                        new { BloodGroupId = 7, Group = "AB +" },
                        new { BloodGroupId = 8, Group = "AB -" }
                    );
                });

            modelBuilder.Entity("EGram.Data.SQL.Ef.Models.Survey", b =>
                {
                    b.Property<int>("SurveyId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("Info");

                    b.Property<DateTime>("ModifiedOn");

                    b.Property<string>("Name");

                    b.Property<int>("SurveyTypeId");

                    b.Property<int>("YearId");

                    b.HasKey("SurveyId");

                    b.HasIndex("SurveyTypeId");

                    b.HasIndex("YearId")
                        .IsUnique();

                    b.ToTable("Surveys");
                });

            modelBuilder.Entity("EGram.Data.SQL.Ef.Models.SurveyType", b =>
                {
                    b.Property<int>("SurveyTypeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Type");

                    b.HasKey("SurveyTypeId");

                    b.ToTable("SurveyType");
                });

            modelBuilder.Entity("EGram.Data.SQL.Ef.Models.Survey", b =>
                {
                    b.HasOne("EGram.Data.SQL.Ef.Models.SurveyType", "SurveyType")
                        .WithMany()
                        .HasForeignKey("SurveyTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
